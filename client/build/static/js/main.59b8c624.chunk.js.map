{"version":3,"sources":["redux/form/form.actionTypes.ts","redux/form/form.reducer.ts","redux/store.ts","components/ListItem/ListItem.tsx","components/Listing/Listing.tsx","components/Messages/ResultsMessage.tsx","redux/form/form.thunk.ts","components/SearchForm/SearchForm.tsx","redux/form/form.actions.ts","App.tsx","serviceWorker.js","index.js"],"names":["actionTypes","FORM_FETCH","FORM_SUCCESS","FORM_ERROR","initialState","data","error","loading","success","formReducer","state","action","type","payload","rootReducer","combineReducers","form","store","createStore","applyMiddleware","thunk","ListItem","result","Card","CardActionArea","Link","href","trackViewUrl","target","rel","CardMedia","component","image","artworkUrl100","title","trackName","alt","CardContent","Typography","gutterBottom","variant","color","artistName","collectionName","Listing","results","useState","hasMoreResults","setHasMoreResults","resultCount","setResultCount","useEffect","length","activeResults","slice","window","onscroll","document","documentElement","scrollTop","innerHeight","body","scrollHeight","Grid","container","spacing","map","item","xs","sm","md","lg","key","trackId","ResultsMessage","searchTitle","useSelector","useStyles","makeStyles","theme","formControl","width","mediaOptions","value","label","SearchForm","dispatch","useDispatch","media","term","query","setQuery","classes","onChange","field","onSubmit","a","fetch","process","res","json","fetchData","name","className","Container","maxWidth","justify","FormControl","InputLabel","id","Select","labelId","mediaOption","MenuItem","TextField","e","Button","onClick","size","App","resultsPayload","hasResults","Box","xmlns","viewBox","fill","d","cx","cy","r","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.59b8c624.chunk.js","sourcesContent":["type ActionTypes = {\n  FORM_FETCH: string;\n  FORM_SUCCESS: string;\n  FORM_ERROR: string;\n};\n\nconst actionTypes: ActionTypes = {\n  FORM_FETCH: 'FORM_FETCH',\n  FORM_SUCCESS: 'FORM_SUCCESS',\n  FORM_ERROR: 'FORM_ERROR'\n};\n\nexport default actionTypes;","import actionTypes from './form.actionTypes';\n\ntype State = {\n  data: any,\n  error: boolean,\n  loading: boolean,\n  success: boolean,\n}\n\ntype Action = {\n  type: string;\n  payload: any;\n}\n\nconst initialState = {\n  data: [],\n  error: false,\n  loading: false,\n  success: false,\n} \n\nfunction formReducer (state:any = initialState, action: Action): State {\n  switch (action.type) {\n    case actionTypes.FORM_FETCH: {\n      return {\n        ...state,\n        loading: true\n      }\n    }\n    case actionTypes.FORM_SUCCESS: {\n      return {\n        ...state,\n        data: action.payload,\n        loading: false,\n        success: true,\n        error: false\n      }\n    }\n    case actionTypes.FORM_ERROR: {\n      return {\n        ...state,\n        data: action.payload,\n        loading: false,\n        success: false,\n        error: true\n      }\n    }\n    default: \n      return state;\n  }\n}\n\nexport default formReducer;","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport formReducer from './form/form.reducer';\n\nconst rootReducer = combineReducers({\n  form: formReducer\n})\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunk)\n);\n\nexport default store;","import React from \"react\";\nimport { Result } from 'declarations/types';\n\nimport { \n  Card,\n  CardActionArea,\n  CardContent,\n  CardMedia,\n  Link,\n  Typography\n} from '@material-ui/core';\n\ntype Props = {\n  result: Result;\n};\n\nconst ListItem = ({ result }: Props): JSX.Element => (\n\n  <Card>\n  \n    <CardActionArea>\n\n      <Link href={result.trackViewUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n\n        <CardMedia\n          component=\"img\"\n          image={result.artworkUrl100}\n          title={result.trackName}\n          alt={result.trackName}\n        />\n\n        <CardContent>\n\n          <Typography gutterBottom variant=\"h6\" color=\"primary\" component=\"h2\">\n            {result.trackName}\n          </Typography>\n\n          <Typography gutterBottom variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {result.artistName}\n          </Typography>\n\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {result.collectionName}\n          </Typography>\n\n        </CardContent>\n\n      </Link>\n\n    </CardActionArea>\n\n  </Card>\n\n)\n\nexport default ( ListItem )","import React, { useState, useEffect } from \"react\";\nimport { Result } from 'declarations/types';\n\nimport { \n    Grid, \n    Typography \n} from '@material-ui/core';\n\nimport ListItem from '../ListItem/ListItem';\n\ntype Props = {\n    results: Result[];\n}\n\nconst Listing = ({ results }: Props): JSX.Element => {\n    const [hasMoreResults, setHasMoreResults] = useState<boolean>(false);\n    const [resultCount, setResultCount] = useState<number>(10);\n\n    useEffect(() => setHasMoreResults( results.length > 10 ), [results]);\n\n    const activeResults = results.slice( 0, resultCount );\n\n    const loadMoreResults = () => {\n        if ( resultCount >= results.length ) setHasMoreResults(false);\n        else setResultCount(resultCount + 10);\n    }\n\n    window.onscroll = () => {\n        var d = document.documentElement,\n            offset = d.scrollTop + window.innerHeight;\n\n        if (offset >= document.body.scrollHeight) {\n            hasMoreResults && loadMoreResults();\n        }\n    }\n    \n    return (\n\n        <>\n\n            <Typography gutterBottom variant=\"h5\" color=\"primary\" component=\"h2\">Search Results:</Typography>\n            \n            <Grid container spacing={2}>\n                \n                {activeResults.map( result => (\n\n                    <Grid item xs={6} sm={4} md={3} lg={3} key={result.trackId}>\n\n                        <ListItem result={result} />\n\n                    </Grid>\n\n                ))}\n\n            </Grid>\n\n        </>\n\n    );\n};\n\nexport default ( Listing )","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport Typography from '@material-ui/core/Typography';\n\nconst ResultsMessage = (): JSX.Element => {\n  const results = useSelector(state => state.form)\n\n  let searchTitle:string;\n\n  results.error \n    ? searchTitle = \"Error retrieving your results.\"\n    : results.loading \n      ? searchTitle = \"Finding your results...\"\n      : results.data.payload && results.data.payload.length === 0 \n        ? searchTitle = \"No results found...\"\n        : searchTitle = \"iTunes Search:\"\n\n  return (\n    <div>\n      <Typography gutterBottom variant=\"h5\" color=\"primary\" component=\"h2\">{searchTitle}</Typography>\n      <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">Please search for your favourite bands, artists, movies etc above. Alternatively, if no results could be found, please try altering you search.</Typography>\n    </div>\n  )\n};\n\nexport default ( ResultsMessage )","import { formFetch, formSuccess, formError } from './form.actions';\n\nexport const fetchData = query => async dispatch => {\n  dispatch(formFetch()); // set state to loading.\n  try {\n    const res = await fetch(`${process.env.REACT_APP_API_URL}?term=${query.term}&media=${query.media}&limit=200`);\n    const data = await res.json();\n    dispatch(\n      formSuccess({ payload: data.results })\n    );\n  } catch (error) {\n    dispatch(\n      formError({ payload: error })\n    );\n  }\n}","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchData } from 'redux/form/form.thunk';\n\nimport {\n  makeStyles,\n  Container,\n  Grid,\n  InputLabel,\n  MenuItem,\n  FormControl,\n  Select,\n  Button,\n  TextField,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    width: 100 + '%',\n  },\n}));\n\nconst mediaOptions = [\n  {value: 'movie', label: 'Movie' },\n  {value: 'podcast', label: 'Podcast' },\n  {value: 'music', label: 'Music' },\n  {value: 'musicVideo', label: 'Music Video' },\n  {value: 'audioBook', label: 'Audio Book' },\n  {value: 'shortFilm', label: 'Short Film' },\n  {value: 'tvShow', label: 'TV Show' },\n  {value: 'software', label: 'Software' },\n  {value: 'all', label: 'All' }\n];\n\ntype Query = {\n  media?: string,\n  term?: string\n}\n\nconst SearchForm = () => {\n  const dispatch = useDispatch();\n  const [query, setQuery] = useState<Query>({\n    media: '',\n    term: ''\n  });\n\n  const classes = useStyles();\n\n  const onChange = ( data, field ) => {\n    if ( field === 'term' ) setQuery({...query, term: data });\n    else setQuery({...query, media: data });\n  }\n\n  const onSubmit = () => dispatch( fetchData( query ) );\n\n  return (\n\n    <form \n      name=\"filters\" \n      className=\"section\" \n    >\n\n      <Container maxWidth=\"lg\">\n            \n          <Grid container justify=\"center\" spacing={2}>\n                          \n            <Grid item xs={12} sm={3}>\n\n              <FormControl variant=\"filled\" className={classes.formControl}>\n\n                <InputLabel id=\"demo-simple-select-filled-label\">Title</InputLabel>\n\n                <Select\n                  value={query.media}\n                  labelId=\"demo-simple-select-filled-label\"\n                  id=\"demo-simple-select-filled\"\n                  onChange={value => onChange(value.target.value, 'media')}\n                >\n                \n                  {mediaOptions.map( mediaOption => (\n\n                    <MenuItem key={mediaOption.value} value={mediaOption.value}>{mediaOption.label}</MenuItem>\n\n                  ))}\n\n                </Select>\n\n              </FormControl>\n\n            </Grid>\n\n            <Grid item xs={12} sm={7}>\n\n              <FormControl variant=\"filled\" className={classes.formControl}>\n\n                <TextField \n                  id=\"term\"\n                  name=\"term\"\n                  value={query.term}\n                  label=\"Search Text\"\n                  onChange={e => onChange(e.target.value, 'term')}\n                  variant=\"filled\"\n                />\n\n              </FormControl>\n\n            </Grid>\n\n            <Grid item xs={5} sm={2}>\n\n              <FormControl variant=\"filled\" className={classes.formControl}>\n                \n                <Button variant=\"contained\" onClick={() => onSubmit()} color=\"primary\" size=\"large\">Search</Button>\n              \n              </FormControl>\n\n            </Grid>\n\n        </Grid>\n\n      </Container>\n\n    </form>\n  )\n};\n\nexport default SearchForm;","import actionTypes from './form.actionTypes'\n\ntype Form = any;\n\nexport function formFetch (): { type: string } {\n  return {\n    type: actionTypes.FORM_FETCH\n  }\n}\n\nexport function formSuccess ( form: Form ): { type: string, payload: Form } {\n  return {\n    type: actionTypes.FORM_SUCCESS,\n    payload: form\n  }\n}\n\nexport function formError ( error: any ): { type: string, payload: any } {\n  return {\n    type: actionTypes.FORM_ERROR,\n    payload: error\n  }\n}","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Result } from './declarations/types';\nimport {\n  SearchForm,\n  Listing,\n  ResultsMessage,\n} from './components';\n\nimport { \n  Box,\n  Container\n} from '@material-ui/core';\n\nimport \"./App.css\";\n\n\nconst App = () => {\n  const results = useSelector(state => state.form),\n  resultsPayload: Result[] = results.data.payload\n  const hasResults = resultsPayload && resultsPayload.length > 0;\n\n  return (\n    \n    <Box className=\"App\">\n    \n      <header className=\"header\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 841.9 595.3\" width=\"100\">\n            <g fill=\"#61DAFB\">\n              <path d=\"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z\"/>\n              <circle cx=\"420.9\" cy=\"296.5\" r=\"45.7\"/>\n              <path d=\"M520.5 78.1z\"/>\n            </g>\n          </svg>\n      </header>\n\n      <SearchForm />\n\n      <Box className=\"section section--grey\">\n\n        <Container maxWidth=\"lg\">\n\n          { hasResults\n            ? <Listing results={resultsPayload} />\n            : <ResultsMessage />\n          }\n\n        </Container>\n\n      </Box>\n\n    </Box>\n\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './redux/store';\n\nimport './index.css';\nimport 'antd/dist/antd.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}